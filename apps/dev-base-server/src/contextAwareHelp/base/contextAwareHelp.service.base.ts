/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ContextAwareHelp as PrismaContextAwareHelp,
} from "@prisma/client";

export class ContextAwareHelpServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContextAwareHelpCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contextAwareHelp.count(args);
  }

  async contextAwareHelps(
    args: Prisma.ContextAwareHelpFindManyArgs
  ): Promise<PrismaContextAwareHelp[]> {
    return this.prisma.contextAwareHelp.findMany(args);
  }
  async contextAwareHelp(
    args: Prisma.ContextAwareHelpFindUniqueArgs
  ): Promise<PrismaContextAwareHelp | null> {
    return this.prisma.contextAwareHelp.findUnique(args);
  }
  async createContextAwareHelp(
    args: Prisma.ContextAwareHelpCreateArgs
  ): Promise<PrismaContextAwareHelp> {
    return this.prisma.contextAwareHelp.create(args);
  }
  async updateContextAwareHelp(
    args: Prisma.ContextAwareHelpUpdateArgs
  ): Promise<PrismaContextAwareHelp> {
    return this.prisma.contextAwareHelp.update(args);
  }
  async deleteContextAwareHelp(
    args: Prisma.ContextAwareHelpDeleteArgs
  ): Promise<PrismaContextAwareHelp> {
    return this.prisma.contextAwareHelp.delete(args);
  }
}
