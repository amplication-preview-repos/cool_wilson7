/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserBehaviorModeling as PrismaUserBehaviorModeling,
} from "@prisma/client";

export class UserBehaviorModelingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserBehaviorModelingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userBehaviorModeling.count(args);
  }

  async userBehaviorModelings(
    args: Prisma.UserBehaviorModelingFindManyArgs
  ): Promise<PrismaUserBehaviorModeling[]> {
    return this.prisma.userBehaviorModeling.findMany(args);
  }
  async userBehaviorModeling(
    args: Prisma.UserBehaviorModelingFindUniqueArgs
  ): Promise<PrismaUserBehaviorModeling | null> {
    return this.prisma.userBehaviorModeling.findUnique(args);
  }
  async createUserBehaviorModeling(
    args: Prisma.UserBehaviorModelingCreateArgs
  ): Promise<PrismaUserBehaviorModeling> {
    return this.prisma.userBehaviorModeling.create(args);
  }
  async updateUserBehaviorModeling(
    args: Prisma.UserBehaviorModelingUpdateArgs
  ): Promise<PrismaUserBehaviorModeling> {
    return this.prisma.userBehaviorModeling.update(args);
  }
  async deleteUserBehaviorModeling(
    args: Prisma.UserBehaviorModelingDeleteArgs
  ): Promise<PrismaUserBehaviorModeling> {
    return this.prisma.userBehaviorModeling.delete(args);
  }
}
