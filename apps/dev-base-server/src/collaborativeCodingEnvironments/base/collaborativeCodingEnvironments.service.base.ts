/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  CollaborativeCodingEnvironments as PrismaCollaborativeCodingEnvironments,
} from "@prisma/client";

export class CollaborativeCodingEnvironmentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CollaborativeCodingEnvironmentsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.collaborativeCodingEnvironments.count(args);
  }

  async collaborativeCodingEnvironmentsItems(
    args: Prisma.CollaborativeCodingEnvironmentsFindManyArgs
  ): Promise<PrismaCollaborativeCodingEnvironments[]> {
    return this.prisma.collaborativeCodingEnvironments.findMany(args);
  }
  async collaborativeCodingEnvironments(
    args: Prisma.CollaborativeCodingEnvironmentsFindUniqueArgs
  ): Promise<PrismaCollaborativeCodingEnvironments | null> {
    return this.prisma.collaborativeCodingEnvironments.findUnique(args);
  }
  async createCollaborativeCodingEnvironments(
    args: Prisma.CollaborativeCodingEnvironmentsCreateArgs
  ): Promise<PrismaCollaborativeCodingEnvironments> {
    return this.prisma.collaborativeCodingEnvironments.create(args);
  }
  async updateCollaborativeCodingEnvironments(
    args: Prisma.CollaborativeCodingEnvironmentsUpdateArgs
  ): Promise<PrismaCollaborativeCodingEnvironments> {
    return this.prisma.collaborativeCodingEnvironments.update(args);
  }
  async deleteCollaborativeCodingEnvironments(
    args: Prisma.CollaborativeCodingEnvironmentsDeleteArgs
  ): Promise<PrismaCollaborativeCodingEnvironments> {
    return this.prisma.collaborativeCodingEnvironments.delete(args);
  }
}
