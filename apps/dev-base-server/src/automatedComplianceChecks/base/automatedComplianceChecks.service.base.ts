/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AutomatedComplianceChecks as PrismaAutomatedComplianceChecks,
} from "@prisma/client";

export class AutomatedComplianceChecksServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AutomatedComplianceChecksCountArgs, "select">
  ): Promise<number> {
    return this.prisma.automatedComplianceChecks.count(args);
  }

  async automatedComplianceChecksItems(
    args: Prisma.AutomatedComplianceChecksFindManyArgs
  ): Promise<PrismaAutomatedComplianceChecks[]> {
    return this.prisma.automatedComplianceChecks.findMany(args);
  }
  async automatedComplianceChecks(
    args: Prisma.AutomatedComplianceChecksFindUniqueArgs
  ): Promise<PrismaAutomatedComplianceChecks | null> {
    return this.prisma.automatedComplianceChecks.findUnique(args);
  }
  async createAutomatedComplianceChecks(
    args: Prisma.AutomatedComplianceChecksCreateArgs
  ): Promise<PrismaAutomatedComplianceChecks> {
    return this.prisma.automatedComplianceChecks.create(args);
  }
  async updateAutomatedComplianceChecks(
    args: Prisma.AutomatedComplianceChecksUpdateArgs
  ): Promise<PrismaAutomatedComplianceChecks> {
    return this.prisma.automatedComplianceChecks.update(args);
  }
  async deleteAutomatedComplianceChecks(
    args: Prisma.AutomatedComplianceChecksDeleteArgs
  ): Promise<PrismaAutomatedComplianceChecks> {
    return this.prisma.automatedComplianceChecks.delete(args);
  }
}
