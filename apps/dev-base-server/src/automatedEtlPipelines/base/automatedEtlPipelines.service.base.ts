/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AutomatedEtlPipelines as PrismaAutomatedEtlPipelines,
} from "@prisma/client";

export class AutomatedEtlPipelinesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AutomatedEtlPipelinesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.automatedEtlPipelines.count(args);
  }

  async automatedEtlPipelinesItems(
    args: Prisma.AutomatedEtlPipelinesFindManyArgs
  ): Promise<PrismaAutomatedEtlPipelines[]> {
    return this.prisma.automatedEtlPipelines.findMany(args);
  }
  async automatedEtlPipelines(
    args: Prisma.AutomatedEtlPipelinesFindUniqueArgs
  ): Promise<PrismaAutomatedEtlPipelines | null> {
    return this.prisma.automatedEtlPipelines.findUnique(args);
  }
  async createAutomatedEtlPipelines(
    args: Prisma.AutomatedEtlPipelinesCreateArgs
  ): Promise<PrismaAutomatedEtlPipelines> {
    return this.prisma.automatedEtlPipelines.create(args);
  }
  async updateAutomatedEtlPipelines(
    args: Prisma.AutomatedEtlPipelinesUpdateArgs
  ): Promise<PrismaAutomatedEtlPipelines> {
    return this.prisma.automatedEtlPipelines.update(args);
  }
  async deleteAutomatedEtlPipelines(
    args: Prisma.AutomatedEtlPipelinesDeleteArgs
  ): Promise<PrismaAutomatedEtlPipelines> {
    return this.prisma.automatedEtlPipelines.delete(args);
  }
}
