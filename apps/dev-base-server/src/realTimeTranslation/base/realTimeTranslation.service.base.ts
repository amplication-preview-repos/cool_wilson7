/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  RealTimeTranslation as PrismaRealTimeTranslation,
} from "@prisma/client";

export class RealTimeTranslationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RealTimeTranslationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.realTimeTranslation.count(args);
  }

  async realTimeTranslations(
    args: Prisma.RealTimeTranslationFindManyArgs
  ): Promise<PrismaRealTimeTranslation[]> {
    return this.prisma.realTimeTranslation.findMany(args);
  }
  async realTimeTranslation(
    args: Prisma.RealTimeTranslationFindUniqueArgs
  ): Promise<PrismaRealTimeTranslation | null> {
    return this.prisma.realTimeTranslation.findUnique(args);
  }
  async createRealTimeTranslation(
    args: Prisma.RealTimeTranslationCreateArgs
  ): Promise<PrismaRealTimeTranslation> {
    return this.prisma.realTimeTranslation.create(args);
  }
  async updateRealTimeTranslation(
    args: Prisma.RealTimeTranslationUpdateArgs
  ): Promise<PrismaRealTimeTranslation> {
    return this.prisma.realTimeTranslation.update(args);
  }
  async deleteRealTimeTranslation(
    args: Prisma.RealTimeTranslationDeleteArgs
  ): Promise<PrismaRealTimeTranslation> {
    return this.prisma.realTimeTranslation.delete(args);
  }
}
