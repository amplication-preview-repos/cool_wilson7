/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DataRetentionPolicies as PrismaDataRetentionPolicies,
} from "@prisma/client";

export class DataRetentionPoliciesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DataRetentionPoliciesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dataRetentionPolicies.count(args);
  }

  async dataRetentionPoliciesItems(
    args: Prisma.DataRetentionPoliciesFindManyArgs
  ): Promise<PrismaDataRetentionPolicies[]> {
    return this.prisma.dataRetentionPolicies.findMany(args);
  }
  async dataRetentionPolicies(
    args: Prisma.DataRetentionPoliciesFindUniqueArgs
  ): Promise<PrismaDataRetentionPolicies | null> {
    return this.prisma.dataRetentionPolicies.findUnique(args);
  }
  async createDataRetentionPolicies(
    args: Prisma.DataRetentionPoliciesCreateArgs
  ): Promise<PrismaDataRetentionPolicies> {
    return this.prisma.dataRetentionPolicies.create(args);
  }
  async updateDataRetentionPolicies(
    args: Prisma.DataRetentionPoliciesUpdateArgs
  ): Promise<PrismaDataRetentionPolicies> {
    return this.prisma.dataRetentionPolicies.update(args);
  }
  async deleteDataRetentionPolicies(
    args: Prisma.DataRetentionPoliciesDeleteArgs
  ): Promise<PrismaDataRetentionPolicies> {
    return this.prisma.dataRetentionPolicies.delete(args);
  }
}
