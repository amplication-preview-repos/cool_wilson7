/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  PlatformSpecificOptimizations as PrismaPlatformSpecificOptimizations,
} from "@prisma/client";

export class PlatformSpecificOptimizationsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PlatformSpecificOptimizationsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.platformSpecificOptimizations.count(args);
  }

  async platformSpecificOptimizationsItems(
    args: Prisma.PlatformSpecificOptimizationsFindManyArgs
  ): Promise<PrismaPlatformSpecificOptimizations[]> {
    return this.prisma.platformSpecificOptimizations.findMany(args);
  }
  async platformSpecificOptimizations(
    args: Prisma.PlatformSpecificOptimizationsFindUniqueArgs
  ): Promise<PrismaPlatformSpecificOptimizations | null> {
    return this.prisma.platformSpecificOptimizations.findUnique(args);
  }
  async createPlatformSpecificOptimizations(
    args: Prisma.PlatformSpecificOptimizationsCreateArgs
  ): Promise<PrismaPlatformSpecificOptimizations> {
    return this.prisma.platformSpecificOptimizations.create(args);
  }
  async updatePlatformSpecificOptimizations(
    args: Prisma.PlatformSpecificOptimizationsUpdateArgs
  ): Promise<PrismaPlatformSpecificOptimizations> {
    return this.prisma.platformSpecificOptimizations.update(args);
  }
  async deletePlatformSpecificOptimizations(
    args: Prisma.PlatformSpecificOptimizationsDeleteArgs
  ): Promise<PrismaPlatformSpecificOptimizations> {
    return this.prisma.platformSpecificOptimizations.delete(args);
  }
}
