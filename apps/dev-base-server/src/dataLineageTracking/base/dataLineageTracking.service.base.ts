/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DataLineageTracking as PrismaDataLineageTracking,
} from "@prisma/client";

export class DataLineageTrackingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DataLineageTrackingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dataLineageTracking.count(args);
  }

  async dataLineageTrackings(
    args: Prisma.DataLineageTrackingFindManyArgs
  ): Promise<PrismaDataLineageTracking[]> {
    return this.prisma.dataLineageTracking.findMany(args);
  }
  async dataLineageTracking(
    args: Prisma.DataLineageTrackingFindUniqueArgs
  ): Promise<PrismaDataLineageTracking | null> {
    return this.prisma.dataLineageTracking.findUnique(args);
  }
  async createDataLineageTracking(
    args: Prisma.DataLineageTrackingCreateArgs
  ): Promise<PrismaDataLineageTracking> {
    return this.prisma.dataLineageTracking.create(args);
  }
  async updateDataLineageTracking(
    args: Prisma.DataLineageTrackingUpdateArgs
  ): Promise<PrismaDataLineageTracking> {
    return this.prisma.dataLineageTracking.update(args);
  }
  async deleteDataLineageTracking(
    args: Prisma.DataLineageTrackingDeleteArgs
  ): Promise<PrismaDataLineageTracking> {
    return this.prisma.dataLineageTracking.delete(args);
  }
}
