/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AutomatedFeatureEngineering as PrismaAutomatedFeatureEngineering,
} from "@prisma/client";

export class AutomatedFeatureEngineeringServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AutomatedFeatureEngineeringCountArgs, "select">
  ): Promise<number> {
    return this.prisma.automatedFeatureEngineering.count(args);
  }

  async automatedFeatureEngineerings(
    args: Prisma.AutomatedFeatureEngineeringFindManyArgs
  ): Promise<PrismaAutomatedFeatureEngineering[]> {
    return this.prisma.automatedFeatureEngineering.findMany(args);
  }
  async automatedFeatureEngineering(
    args: Prisma.AutomatedFeatureEngineeringFindUniqueArgs
  ): Promise<PrismaAutomatedFeatureEngineering | null> {
    return this.prisma.automatedFeatureEngineering.findUnique(args);
  }
  async createAutomatedFeatureEngineering(
    args: Prisma.AutomatedFeatureEngineeringCreateArgs
  ): Promise<PrismaAutomatedFeatureEngineering> {
    return this.prisma.automatedFeatureEngineering.create(args);
  }
  async updateAutomatedFeatureEngineering(
    args: Prisma.AutomatedFeatureEngineeringUpdateArgs
  ): Promise<PrismaAutomatedFeatureEngineering> {
    return this.prisma.automatedFeatureEngineering.update(args);
  }
  async deleteAutomatedFeatureEngineering(
    args: Prisma.AutomatedFeatureEngineeringDeleteArgs
  ): Promise<PrismaAutomatedFeatureEngineering> {
    return this.prisma.automatedFeatureEngineering.delete(args);
  }
}
