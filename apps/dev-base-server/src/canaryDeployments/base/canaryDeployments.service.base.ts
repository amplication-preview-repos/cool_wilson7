/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CanaryDeployments as PrismaCanaryDeployments,
} from "@prisma/client";

export class CanaryDeploymentsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CanaryDeploymentsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.canaryDeployments.count(args);
  }

  async canaryDeploymentsItems(
    args: Prisma.CanaryDeploymentsFindManyArgs
  ): Promise<PrismaCanaryDeployments[]> {
    return this.prisma.canaryDeployments.findMany(args);
  }
  async canaryDeployments(
    args: Prisma.CanaryDeploymentsFindUniqueArgs
  ): Promise<PrismaCanaryDeployments | null> {
    return this.prisma.canaryDeployments.findUnique(args);
  }
  async createCanaryDeployments(
    args: Prisma.CanaryDeploymentsCreateArgs
  ): Promise<PrismaCanaryDeployments> {
    return this.prisma.canaryDeployments.create(args);
  }
  async updateCanaryDeployments(
    args: Prisma.CanaryDeploymentsUpdateArgs
  ): Promise<PrismaCanaryDeployments> {
    return this.prisma.canaryDeployments.update(args);
  }
  async deleteCanaryDeployments(
    args: Prisma.CanaryDeploymentsDeleteArgs
  ): Promise<PrismaCanaryDeployments> {
    return this.prisma.canaryDeployments.delete(args);
  }
}
