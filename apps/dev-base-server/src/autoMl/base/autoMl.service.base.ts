/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AutoMl as PrismaAutoMl } from "@prisma/client";

export class AutoMlServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.AutoMlCountArgs, "select">): Promise<number> {
    return this.prisma.autoMl.count(args);
  }

  async autoMls(args: Prisma.AutoMlFindManyArgs): Promise<PrismaAutoMl[]> {
    return this.prisma.autoMl.findMany(args);
  }
  async autoMl(
    args: Prisma.AutoMlFindUniqueArgs
  ): Promise<PrismaAutoMl | null> {
    return this.prisma.autoMl.findUnique(args);
  }
  async createAutoMl(args: Prisma.AutoMlCreateArgs): Promise<PrismaAutoMl> {
    return this.prisma.autoMl.create(args);
  }
  async updateAutoMl(args: Prisma.AutoMlUpdateArgs): Promise<PrismaAutoMl> {
    return this.prisma.autoMl.update(args);
  }
  async deleteAutoMl(args: Prisma.AutoMlDeleteArgs): Promise<PrismaAutoMl> {
    return this.prisma.autoMl.delete(args);
  }
}
