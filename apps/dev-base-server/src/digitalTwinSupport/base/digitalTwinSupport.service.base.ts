/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DigitalTwinSupport as PrismaDigitalTwinSupport,
} from "@prisma/client";

export class DigitalTwinSupportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DigitalTwinSupportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.digitalTwinSupport.count(args);
  }

  async digitalTwinSupports(
    args: Prisma.DigitalTwinSupportFindManyArgs
  ): Promise<PrismaDigitalTwinSupport[]> {
    return this.prisma.digitalTwinSupport.findMany(args);
  }
  async digitalTwinSupport(
    args: Prisma.DigitalTwinSupportFindUniqueArgs
  ): Promise<PrismaDigitalTwinSupport | null> {
    return this.prisma.digitalTwinSupport.findUnique(args);
  }
  async createDigitalTwinSupport(
    args: Prisma.DigitalTwinSupportCreateArgs
  ): Promise<PrismaDigitalTwinSupport> {
    return this.prisma.digitalTwinSupport.create(args);
  }
  async updateDigitalTwinSupport(
    args: Prisma.DigitalTwinSupportUpdateArgs
  ): Promise<PrismaDigitalTwinSupport> {
    return this.prisma.digitalTwinSupport.update(args);
  }
  async deleteDigitalTwinSupport(
    args: Prisma.DigitalTwinSupportDeleteArgs
  ): Promise<PrismaDigitalTwinSupport> {
    return this.prisma.digitalTwinSupport.delete(args);
  }
}
