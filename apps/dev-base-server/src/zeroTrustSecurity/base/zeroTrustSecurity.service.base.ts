/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ZeroTrustSecurity as PrismaZeroTrustSecurity,
} from "@prisma/client";

export class ZeroTrustSecurityServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ZeroTrustSecurityCountArgs, "select">
  ): Promise<number> {
    return this.prisma.zeroTrustSecurity.count(args);
  }

  async zeroTrustSecurities(
    args: Prisma.ZeroTrustSecurityFindManyArgs
  ): Promise<PrismaZeroTrustSecurity[]> {
    return this.prisma.zeroTrustSecurity.findMany(args);
  }
  async zeroTrustSecurity(
    args: Prisma.ZeroTrustSecurityFindUniqueArgs
  ): Promise<PrismaZeroTrustSecurity | null> {
    return this.prisma.zeroTrustSecurity.findUnique(args);
  }
  async createZeroTrustSecurity(
    args: Prisma.ZeroTrustSecurityCreateArgs
  ): Promise<PrismaZeroTrustSecurity> {
    return this.prisma.zeroTrustSecurity.create(args);
  }
  async updateZeroTrustSecurity(
    args: Prisma.ZeroTrustSecurityUpdateArgs
  ): Promise<PrismaZeroTrustSecurity> {
    return this.prisma.zeroTrustSecurity.update(args);
  }
  async deleteZeroTrustSecurity(
    args: Prisma.ZeroTrustSecurityDeleteArgs
  ): Promise<PrismaZeroTrustSecurity> {
    return this.prisma.zeroTrustSecurity.delete(args);
  }
}
