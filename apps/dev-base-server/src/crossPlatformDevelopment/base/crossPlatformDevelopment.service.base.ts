/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CrossPlatformDevelopment as PrismaCrossPlatformDevelopment,
} from "@prisma/client";

export class CrossPlatformDevelopmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CrossPlatformDevelopmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.crossPlatformDevelopment.count(args);
  }

  async crossPlatformDevelopments(
    args: Prisma.CrossPlatformDevelopmentFindManyArgs
  ): Promise<PrismaCrossPlatformDevelopment[]> {
    return this.prisma.crossPlatformDevelopment.findMany(args);
  }
  async crossPlatformDevelopment(
    args: Prisma.CrossPlatformDevelopmentFindUniqueArgs
  ): Promise<PrismaCrossPlatformDevelopment | null> {
    return this.prisma.crossPlatformDevelopment.findUnique(args);
  }
  async createCrossPlatformDevelopment(
    args: Prisma.CrossPlatformDevelopmentCreateArgs
  ): Promise<PrismaCrossPlatformDevelopment> {
    return this.prisma.crossPlatformDevelopment.create(args);
  }
  async updateCrossPlatformDevelopment(
    args: Prisma.CrossPlatformDevelopmentUpdateArgs
  ): Promise<PrismaCrossPlatformDevelopment> {
    return this.prisma.crossPlatformDevelopment.update(args);
  }
  async deleteCrossPlatformDevelopment(
    args: Prisma.CrossPlatformDevelopmentDeleteArgs
  ): Promise<PrismaCrossPlatformDevelopment> {
    return this.prisma.crossPlatformDevelopment.delete(args);
  }
}
