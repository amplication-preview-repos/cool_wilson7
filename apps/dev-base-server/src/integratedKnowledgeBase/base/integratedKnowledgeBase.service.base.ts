/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  IntegratedKnowledgeBase as PrismaIntegratedKnowledgeBase,
} from "@prisma/client";

export class IntegratedKnowledgeBaseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.IntegratedKnowledgeBaseCountArgs, "select">
  ): Promise<number> {
    return this.prisma.integratedKnowledgeBase.count(args);
  }

  async integratedKnowledgeBases(
    args: Prisma.IntegratedKnowledgeBaseFindManyArgs
  ): Promise<PrismaIntegratedKnowledgeBase[]> {
    return this.prisma.integratedKnowledgeBase.findMany(args);
  }
  async integratedKnowledgeBase(
    args: Prisma.IntegratedKnowledgeBaseFindUniqueArgs
  ): Promise<PrismaIntegratedKnowledgeBase | null> {
    return this.prisma.integratedKnowledgeBase.findUnique(args);
  }
  async createIntegratedKnowledgeBase(
    args: Prisma.IntegratedKnowledgeBaseCreateArgs
  ): Promise<PrismaIntegratedKnowledgeBase> {
    return this.prisma.integratedKnowledgeBase.create(args);
  }
  async updateIntegratedKnowledgeBase(
    args: Prisma.IntegratedKnowledgeBaseUpdateArgs
  ): Promise<PrismaIntegratedKnowledgeBase> {
    return this.prisma.integratedKnowledgeBase.update(args);
  }
  async deleteIntegratedKnowledgeBase(
    args: Prisma.IntegratedKnowledgeBaseDeleteArgs
  ): Promise<PrismaIntegratedKnowledgeBase> {
    return this.prisma.integratedKnowledgeBase.delete(args);
  }
}
