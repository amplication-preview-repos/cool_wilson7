/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AiDrivenIncidentResponse as PrismaAiDrivenIncidentResponse,
} from "@prisma/client";

export class AiDrivenIncidentResponseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AiDrivenIncidentResponseCountArgs, "select">
  ): Promise<number> {
    return this.prisma.aiDrivenIncidentResponse.count(args);
  }

  async aiDrivenIncidentResponses(
    args: Prisma.AiDrivenIncidentResponseFindManyArgs
  ): Promise<PrismaAiDrivenIncidentResponse[]> {
    return this.prisma.aiDrivenIncidentResponse.findMany(args);
  }
  async aiDrivenIncidentResponse(
    args: Prisma.AiDrivenIncidentResponseFindUniqueArgs
  ): Promise<PrismaAiDrivenIncidentResponse | null> {
    return this.prisma.aiDrivenIncidentResponse.findUnique(args);
  }
  async createAiDrivenIncidentResponse(
    args: Prisma.AiDrivenIncidentResponseCreateArgs
  ): Promise<PrismaAiDrivenIncidentResponse> {
    return this.prisma.aiDrivenIncidentResponse.create(args);
  }
  async updateAiDrivenIncidentResponse(
    args: Prisma.AiDrivenIncidentResponseUpdateArgs
  ): Promise<PrismaAiDrivenIncidentResponse> {
    return this.prisma.aiDrivenIncidentResponse.update(args);
  }
  async deleteAiDrivenIncidentResponse(
    args: Prisma.AiDrivenIncidentResponseDeleteArgs
  ): Promise<PrismaAiDrivenIncidentResponse> {
    return this.prisma.aiDrivenIncidentResponse.delete(args);
  }
}
