/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DataLakeIntegration as PrismaDataLakeIntegration,
} from "@prisma/client";

export class DataLakeIntegrationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DataLakeIntegrationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dataLakeIntegration.count(args);
  }

  async dataLakeIntegrations(
    args: Prisma.DataLakeIntegrationFindManyArgs
  ): Promise<PrismaDataLakeIntegration[]> {
    return this.prisma.dataLakeIntegration.findMany(args);
  }
  async dataLakeIntegration(
    args: Prisma.DataLakeIntegrationFindUniqueArgs
  ): Promise<PrismaDataLakeIntegration | null> {
    return this.prisma.dataLakeIntegration.findUnique(args);
  }
  async createDataLakeIntegration(
    args: Prisma.DataLakeIntegrationCreateArgs
  ): Promise<PrismaDataLakeIntegration> {
    return this.prisma.dataLakeIntegration.create(args);
  }
  async updateDataLakeIntegration(
    args: Prisma.DataLakeIntegrationUpdateArgs
  ): Promise<PrismaDataLakeIntegration> {
    return this.prisma.dataLakeIntegration.update(args);
  }
  async deleteDataLakeIntegration(
    args: Prisma.DataLakeIntegrationDeleteArgs
  ): Promise<PrismaDataLakeIntegration> {
    return this.prisma.dataLakeIntegration.delete(args);
  }
}
